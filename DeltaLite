-- Pog

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==2) then function v22()local v38=1941 -(91 + 1850);local v39;local v40;while true do if (v38==(0 + (0 -0))) then v39,v40=v1(v15,v18,v18 + 1 + 1);v18=v18 + 2;v38=1 + 0 + 0;end if ((3 -2)==v38) then return (v40 * (793 -(285 + 252))) + v39;end end end v23=nil;function v23()local v41=1576 -(420 + (2466 -1310));local v42;local v43;local v44;local v45;while true do if (v41==(1893 -(446 + 1109 + (513 -175)))) then v42,v43,v44,v45=v1(v15,v18,v18 + (1953 -(1056 + 894)));v18=v18 + (3 -0) + 1;v41=3 -2;end if (v41==(1 + 0)) then return (v45 * (14389995 + 2387221)) + (v44 * (31980 + 33556)) + (v43 * (621 -365)) + v42;end end end v24=nil;v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v66=v2(v0(v30,16));if v19 then local v77=0;local v78;while true do if (v77==0) then v78=v5(v66,v19);v19=nil;v77=1;end if (v77==1) then return v78;end end else return v66;end end end);v20=nil;v17=1;end if (v17==5) then v29=nil;function v29(v31,v32,v33)local v46=v31[1];local v47=v31[2];local v48=v31[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (3==v67) then A,B=v27(v10(v72));if  not A[1] then local v82=v31[4][v68] or "?";error("Script error at ["   .. v82   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (1==v67) then v70={...};v71=v11("#",...) -1;v67=2;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==2) then v72=nil;function v72()local v83=v46;local v84=Const;local v85=v47;local v86=v48;local v87=v27;local v88={};local v89={};local v90={};for v96=406 -(225 + 181),v71 do if ((((8218 -(1117 + 763)) -(392 + (2406 -1180)))>(3219 -(1669 + (727 -403)))) and (v96>=v86)) then v88[v96-v86]=v70[v96 + (1627 -(6 + 1620))];else v90[v96]=v70[v96 + (434 -((21 -13) + (1492 -1067)))];end end local v91=(v71-v86) + (4 -3);local v92;local v93;while true do local v97=1340 -(508 + 832);local v98;local v99;while true do if ((v97==(0 -0)) or ((1662 -(371 + 1 + 0))>=(6425 -2038))) then v98=(1925 -(317 + 694)) -(570 + 344);v99=nil;v97=1 + 0 + (0 -0);end if (((7365 -4534)<=(10272 -(2459 + 4330))) and (v97==1)) then while true do if (((3076 -(76 + 365))>(28 + (420 -(269 + 100)))) and (v98==(0 + 0))) then v99=0 -0;while true do if (((1904 + 1062)<=(5032 -(663 + 142))) and ((1 + (0 -0))==v99)) then if ((v93<=(78 -62)) or ((12 + 68 + 67 + 141)>=((2911 + 8112) -(24621 -17511)))) then if ((v93<=(2 + 0 + 5)) or ((1991 -(1066 + 30))<((863 -(9 + 256)) -(20 + (1374 -(552 + 265)))))) then if ((v93<=(826 -(527 + 282 + 14))) or (4985<=(450 -(8 + 61)))) then if ((v93<=(1 + 0 + (0 -0))) or ((2934 + 485)<(597 -(1 + 138 + (223 -(6 + 4)))))) then if ((((2924 -(7 + 1878)) -697)<=(3440 + 1311)) and (v93>(0 + 0))) then v90[v92[1331 -(45 + 285 + 999)]]={};else v90[v92[3 -1]]=v92[137 -(34 + 100)];end elseif (((3916 -(354 + 760))==(1353 + (3700 -2251))) and (v93==((44 -30) -(5 + 7)))) then v90[v92[(2203 -1420) -(181 + 458 + 142)]]=v33[v92[1 + 2]];elseif ((v92[1 + 1 + 0]==v90[v92[3 + 1]]) or ((3085 + (1414 -355))<(3474 -861))) then v68=v68 + (1994 -(999 + (1566 -572)));else v68=v92[1032 -(916 + 113)];end elseif ((v93<=(961 -(934 + 22))) or ((1807 -(130 + 43 + 1057))>=(14079 -9515))) then if (((5579 -(171 + 1175))==(7005 -2772)) and (v93>(8 -4))) then if (v90[v92[185 -(101 + 82)]] or ((1744 + 2065)==(20475 -(32734 -16549)))) then v68=v68 + 1 + 0;else v68=v92[11 -8];end else local v128=178 -(10 + 168);local v129;local v130;local v131;local v132;local v133;while true do if (((1024 -369)<=((10576 -7468) -(124 + 88))) and (v128==2)) then local v211=0 -(0 -0);while true do if (((1596 -811)<3265) and (v211==(1970 -(1600 + 369)))) then v128=11 -(1 + 7);break;end if (((2297 + 2446)>(2023 -(3452 -2225))) and (v211==(1120 -(103 + 1005 + 12)))) then for v233=1231 -(1208 + 22),v130 do v90[v131 + v233]=v132[v233];end v133=v132[1 + 0];v211=1 + 0 + 0;end end end if ((((6666 -(44 + 695)) -(833 + 616))>((1761 -(30 + 1338)) -84)) and (v128==(1 -(0 -0)))) then v131=v129 + 1 + 1;v132={v90[v129](v90[v129 + ((3 -1) -1)],v90[v131])};v128=(4212 -2405) -(1630 + 175);end if ((v128==(0 -0)) or ((1248 -214)>((7638 -(356 + 1370)) -(1848 + 406)))) then local v212=0;while true do if (((1577 -(1129 + 335 + 113))==v212) or ((32 + (3790 -(344 + 865)))<=(395 + 263))) then v129=v92[2 -0];v130=v92[3 + 1];v212=1 + 0;end if (((3056 -(120 + 10))==(3405 -(69 + 410))) and (v212==((2 + 0) -1))) then v128=1115 -(860 + 217 + 37);break;end end end if ((v128==(5 -2)) or ((1994 -(1409 + 336))>2070)) then if ((((8447 -(612 + 932)) -3236)>=(1134 + 916)) and v133) then local v221=11 -(6 + 5);local v222;while true do if ((v221==(0 -0)) or (4225<(1295 -(98 + 229 + 705)))) then v222=0;while true do if ((v222==(1801 -(292 + 350 + 1159))) or (((3165 -(232 + 1354)) -(36 + (1169 -(460 + 160))))>=(3232 -(290 + 834)))) then v90[v131]=v133;v68=v92[709 -(652 + 54)];break;end end break;end end else v68=v68 + (2 -1) + 0;end break;end end end elseif ((v93>(968 -(910 + 52))) or (((3217 + 696) -(210 + 771))>(4794 -(71 + 88)))) then v90[v92[951 -((1701 -877) + 125)]]=v92[570 -((383 -(223 + 65)) + 472)]~=(0 + 0);else v90[v92[6 -(588 -(177 + 407))]]=v32[v92[2 + 1]];end elseif ((v93<=(24 -(6 + (384 -(99 + 278))))) or ((630 + 276)==((661 -(244 + 406)) + 2793))) then if ((v93<=(432 -(395 + 28))) or ((250 + 1603)==((6874 -1587) -(36 + 429)))) then if (((3200 -(296 + (102 -49)))<((6957 -(6 + 88)) -3681)) and (v93>(19 -(9 + 2)))) then local v136=0 -(1898 -(361 + 1537));local v137;local v138;local v139;local v140;while true do if (((1170 -500)==(1895 -1225)) and (v136==((2175 -1032) -(766 + 376)))) then v139=nil;v140=nil;v136=3 -1;end if (((6354 -2355)>((778 -(344 + 147)) + 1794)) and (v136==(4 -2))) then while true do if ((v137==(1074 -(992 + 82))) or ((10105 -6639)<=(954 -480))) then v138=(3310 -(575 + 1342)) -((3111 -2072) + 354);v139=nil;v137=(1 + 0) -0;end if (((1585 + (5051 -(732 + 1061)))>=(730 -(453 + 140))) and (v137==(1 + 0))) then v140=nil;while true do if ((v138==(0 -0)) or ((3026 -887)<=((361 + 2465) -1013))) then local v241=0 + (0 -0);while true do if (((12671 -8303)>((1813 -(852 + 152)) + 1434)) and (v241==(0 + (1159 -(887 + 272))))) then v139=v92[2 -0];v140=v90[v139];v241=(736 + 21) -(133 + 623);end if ((((5109 -(1423 + 498)) -1845)<=(11044 -8239)) and (v241==(3 -2))) then v138=1 -0;break;end end end if ((v138==(1 -0)) or (2077>=(21007 -16691))) then for v260=v139 + 1,v92[2 + 1] do v7(v140,v90[v260]);end break;end end break;end end break;end if ((v136==((0 -0) + 0)) or ((233 + 2270)<=2059)) then v137=(898 + 383) -(236 + 1045);v138=nil;v136=(3157 -1949) -(303 + 904);end end else local v141=1947 -((3848 -2328) + 427);local v142;local v143;while true do if ((3831>((19051 -14709) -(426 + 699))) and ((1 + 0)==v141)) then while true do if ((v142==(968 -(268 + 501 + 199))) or ((351 + 2895)<(73 + 386 + 8))) then v143=v92[4 -2];v90[v143](v12(v90,v143 + 1 + 0,v92[3]));break;end end break;end if (((2759 -(3319 -1956))<=(128 + (2789 -(495 + 465)))) and (v141==(1561 -(823 + 304 + 434)))) then v142=(0 -0) + 0;v143=nil;v141=1 + 0;end end end elseif (((4803 -2182)<(3128 -(23 + 212))) and (v93==(7 + 3))) then for v192=v92[3 -1],v92[1640 -(347 + 1290)] do v90[v192]=nil;end else local v144=0 -0;local v145;while true do if ((v144==((2594 -2074) -(183 + (861 -524)))) or ((2307 + (981 -(151 + 635)))>=((6858 + 5016) -7010))) then v145=v92[(1336 -(191 + 1143)) + (0 -0)];v90[v145](v12(v90,v145 + 1 + 0,v69));break;end end end elseif (((1586 -(12 + 9))>(2084 -(1040 + 83))) and (v93<=((34 + 22) -43))) then if (((308 -(124 + 3 + 132))<(4265 -(2844 -(738 + 40)))) and (v93>(8 + (6 -2)))) then local v146=0 -0;local v147;local v148;while true do if ((v146==(2 -1)) or ((2221 -(1498 -(329 + 23)))>1470)) then while true do if (((3558 -(913 + 180))>=(1666 -512)) and (0==v147)) then v148=v92[1 + 1];v90[v148](v90[v148 + 1]);break;end end break;end if ((((41120 -29258) -8068)>(1894 -((2268 -599) + 76))) and (v146==(0 -0))) then local v213=0 + 0;while true do if ((v213==((3396 -(975 + 553)) -((2660 -(1686 + 102)) + 995))) or (((2352 -(226 + 1057)) -639)>((2474 -1148) + 1034))) then v146=1 -0;break;end if (((1496 + 36 + 300)<(3314 + 620)) and (v213==(0 + 0))) then v147=113 -(65 + 48);v148=nil;v213=1 + 0 + 0;end end end end else local v149=337 -((1613 -(549 + 998)) + 271);local v150;while true do if (((0 + 0 + 0)==v149) or ((4280 -2549)<=(46 + 688))) then v150=v92[4 -2];v90[v150]=v90[v150]();break;end end end elseif ((v93<=(6 + 8)) or (((6956 -(161 + 28)) -3110)==(5815 -3837))) then if (((382 + 284)<=(128 + 1391)) and  not v90[v92[5 -3]]) then v68=v68 + (1099 -(228 + 870));else v68=v92[186 -(82 + 101)];end elseif (((126 + 1143 + 1098)<(562 + 3522)) and (v93==(1248 -(153 + 1080)))) then v90[v92[(1505 -(35 + 1466)) -2]][v92[1 + 2]]=v90[v92[7 -3]];else local v201=0 + 0;local v202;local v203;local v204;local v205;while true do if (((379 + 0 + 0)<(17445 -13058)) and (v201==(0 + 0))) then v202=698 -(636 + 62);v203=nil;v201=1 + 0 + 0 + 0;end if ((((5544 -1668) -2566)>(905 -568)) and (v201==(1 + 0))) then v204=nil;v205=nil;v201=2 + 0;end if (((1066 + 587)<(4822 -(1128 + 145))) and (v201==(1323 -(1069 + 252)))) then while true do if (((1999 -(186 + 1084))<(12148 -(4302 + 5214))) and ((1 + (0 -0))==v202)) then v205=nil;while true do if (((3574 -(189 + 81))==(1427 + 1877)) and (v203==(0 -0))) then local v273=0 + 0;while true do if ((((14765 -10426) -1958)>(3538 -(737 + 554))) and (v273==(1 + 0))) then v203=2 -1;break;end if ((v273==(0 + 0 + 0)) or (((12612 -6369) -(1058 + 12 + 253))<3203)) then v204=v92[4 -(2 + 0)];v205=v90[v92[(227 + 208) -(316 + 116)]];v273=3 -(5 -3);end end end if ((v203==(1695 -(1377 + (1474 -(644 + 513))))) or ((1330 + 357)>2492)) then v90[v204 + 1 + 0]=v205;v90[v204]=v205[v92[1 + 3]];break;end end break;end if (((0 -0)==v202) or ((19150 -15174)==(4106 -2070))) then v203=978 -(420 + 558);v204=nil;v202=1;end end break;end end end elseif (((1555 + (1623 -778))<=((6048 -4789) + 3263)) and (v93<=(1067 -(378 + 665)))) then if (((15851 -11659)==(28 + 4164)) and (v93<=((1805 -(1264 + 534)) + 13))) then if ((v93<=((20 + 245) -(190 + 57))) or ((1653 -1015)>=(11328 -6776))) then if ((v93>((49 -22) -10)) or ((1781 -(1633 + 128))>(7762 -4633))) then v90[v92[3 -1]]=v90[v92[8 -5]];else v90[v92[3 -1]]=v29(v85[v92[2 + (136 -(54 + 81))]],nil,v33);end elseif ((v93>(54 -35)) or ((4400 -(257 + 689))==(10299 -6271))) then v90[v92[(2 + 2) -(7 -5)]][v92[1767 -(411 + 1353)]]=v92[3 + 1];else v33[v92[2 + 1]]=v90[v92[2 + (1803 -(80 + 1723))]];end elseif ((v93<=((70 -49) + 1)) or ((2797 -1764)>(1186 + 1089))) then if ((v93>((5 + 34) -(11 + 7))) or ((158 + 218)>(4848 -(955 + 428)))) then local v155=126 -(28 + 98);local v156;local v157;local v158;local v159;local v160;while true do if ((v155==(3 -(1 + 0))) or (((2641 -(275 + 13)) + 1771)<=(562 -393))) then v160=nil;while true do if (((2167 + 955)<((16977 -11543) -(1114 + 151 + 406))) and (v156==((556 + 222) -(287 + 491)))) then v157=1609 -(1364 + (512 -267));v158=nil;v156=1 + 0;end if ((v156==(1 -0)) or (((3974 -(1536 + 307)) + 461)==369)) then v159=nil;v160=nil;v156=2 + 0;end if (((480 + 63)<(4840 -(391 + 844))) and ((1 + 1)==v156)) then while true do if (((4853 -2614)==((2417 -1395) + 1217)) and (v157==((440 + 662) -((389 -271) + 984)))) then local v242=0 + 0;while true do if (((11946 -8794)==(5062 -1910)) and (v242==(1 + 0))) then v157=1 + 0;break;end if (((1660 + 785)<=((3397 -(165 + 169)) + 174)) and (v242==((211 + 57) -(97 + 171)))) then local v276=(3615 -(1388 + 288)) -(1281 + 593 + 65);while true do if ((v276==(0 + 0 + 0)) or ((3565 -(886 + 77))>(11581 -8556))) then v158=v85[v92[13 -10]];v159=nil;v276=1;end if (((1 + 0)==v276) or ((4350 -(1478 + (126 -82)))<=((1771 -(535 + 240)) -(59 + 834)))) then v242=344 -(42 + 115 + 186);break;end end end end end if (((4682 -(46 + 384))>=1147) and (v157==(2 + 0 + 0))) then for v261=1 + 0,v92[3 + 1] do local v262=1620 -(250 + 1370);local v263;local v264;while true do if ((v262==(0 -0)) or (((1331 + 1645) -(661 + 12))==(442 -(7 + 25)))) then v263=0 -(458 -(211 + 247));v264=nil;v262=1 + 0;end if ((v262==(1 + 0)) or ((1620 -(502 + 1117))>(5122 -1500))) then while true do if (((2515 -(16 + 5))>=(1655 -449)) and (v263==((1 + 2) -2))) then if ((v264[1 + 0]==(1334 -(345 + (1705 -734)))) or ((5310 -2833)<=(626 + 1746))) then v160[v261-(1 + 0)]={v90,v264[1271 -(868 + 400)]};else v160[v261-(2 -1)]={v32,v264[6 -3]};end v89[ #v89 + 1 + (1969 -(1708 + 261))]=v160;break;end if (((6404 -4203)<((1758 -(603 + 40)) + 1777)) and (v263==0)) then local v301=0 + 0 + 0;while true do if (((13564 -9575)<=(8602 -4520)) and (v301==(1438 -((1913 -(443 + 181)) + (352 -204))))) then v263=2 -1;break;end if (((6416 -2210)<=(12732 -8210)) and (v301==(1413 -(748 + 665)))) then v68=v68 + (1 -(0 + 0));v264=v83[v68];v301=905 -(448 + (1282 -826));end end end end break;end end end v90[v92[5 -3]]=v29(v158,v159,v33);break;end if (((717 + 3887)<(4535 + (511 -(104 + 130)))) and (v157==(4 -3))) then local v244=(3448 -1450) -((3269 -(657 + 689)) + (1138 -(656 + 407)));while true do if (((2179 + 25)<=(12319 -8181)) and (v244==(1 + 0))) then v157=2 + 0;break;end if (((3466 -(1600 + 86))>((5222 -2721) -1856)) and (v244==(1324 -(1297 + 27)))) then v160={};v159=v9({},{__index=function(v279,v280)local v291=1909 -(1584 + 325);local v292;local v293;while true do if (((2185 -(3052 -(357 + 1423)))<(40 + 1215)) and ((1917 -(744 + 1172))==v291)) then while true do if (((5779 -(962 + 92))>(774 + 69)) and (v292==(1320 -(754 + 566)))) then v293=v160[v280];return v293[820 -(334 + 485)][v293[2 + 0 + 0]];end end break;end if (((2914 -((221 -63) + 951))<(3748 -(247 + 880))) and (v291==(969 -((267 -136) + 838)))) then v292=0;v293=nil;v291=1783 -(1777 + (11 -6));end end end,__newindex=function(v281,v282,v283)local v294=0 + 0;local v295;local v296;while true do if (((732 -(52 + 645))<=((47365 -35448) -7538)) and ((272 -(201 + 71))==v294)) then v295=(9525 -7584) -(1377 + 564);v296=nil;v294=342 -(170 + (664 -493));end if ((((13357 -9886) -(40 + 64))<=(6808 -3166)) and ((1 -0)==v294)) then while true do if (((11596 -8028)>(2391 -(92 + 820))) and (v295==(0 + (467 -(158 + 309))))) then v296=v160[v282];v296[1011 -(567 + 443)][v296[6 -(290 -(144 + 142))]]=v283;break;end end break;end end end});v244=(1 + 2) -2;end end end end break;end end break;end if (((4275 -(75 + 1367))<(3289 -(38 + 321))) and (v155==(0 -0))) then v156=1040 -((387 -(155 + 41)) + 849);v157=nil;v155=1 + 0;end if (((1783 -(1642 + 140))==v155) or ((1579 -(5219 -3972))==(7015 -2373))) then v158=nil;v159=nil;v155=1155 -(1001 + (353 -201));end end else do return;end end elseif ((2725<=((21140 -16842) -(151 + 588))) and (v93==(14 + 9))) then v68=v92[1570 -(693 + 874)];else local v161=0 + 0;local v162;local v163;local v164;local v165;local v166;while true do if (((1 + 0)==v161) or (((3450 + 2124) -(469 + 129 + (701 -(270 + 82))))<(1420 + 870))) then v164=nil;v165=nil;v161=1905 -(379 + 1524);end if ((v161==(0 + 0)) or ((459 -(143 + 223))==(8645 -5614))) then v162=0 + 0;v163=nil;v161=1 + 0 + 0;end if (((568 -(531 + (100 -65)))==v161) or (420==(1608 -(307 + 199)))) then v166=nil;while true do if (((2299 -(154 + 118 + 833))<=(2674 -(212 + 677))) and (v162==((2 -1) + 0))) then local v223=0 + 0 + 0;local v224;while true do if ((v223==(1728 -(1394 + 334))) or ((14971 -11823)<=(2239 -1470))) then v224=0 + 0;while true do if (((7059 -(233 + 3750))<=(3683 -(116 + 28))) and (v224==1)) then v162=399 -(46 + 195 + 156);break;end if ((v224==(0 -(277 -(14 + 263)))) or ((2903 -1586)>=((3710 + 1660) -(689 + 315)))) then local v277=0 + 0;while true do if ((v277==(0 -0)) or ((3951 -((1532 -(737 + 595)) + 913))<(5718 -(2955 + 1230)))) then v69=(v165 + v163) -(358 -(187 + 170));v166=0 -0;v277=1712 -(655 + 624 + 432);end if ((v277==(1 + 0)) or ((4151 -((582 -(221 + 291)) + 664))<=8)) then v224=1167 -((2376 -1473) + 263);break;end end end end break;end end end if (((1008 + 2376 + 889)>(1838 + 138 + 457)) and (v162==(1 + 1))) then for v235=v163,v69 do local v236=196 -(63 + 133);local v237;local v238;while true do if ((v236==(0 + 0 + 0)) or ((5870 -(3650 -1653))>=(4785 -(112 + 444)))) then v237=1870 -(381 + 1489);v238=nil;v236=1 -0;end if ((((4734 -1712) -(212 + 208))<=(3624 -(234 + (2403 -(1574 + 218))))) and ((3 -2)==v236)) then while true do if ((v237==((321 + 1550) -(1651 + 220))) or ((4170 + 649)<=(4751 -1811))) then v238=1259 -(680 + 579);while true do if (((0 + (0 -0))==v238) or ((5773 -3867)==4631)) then v166=v166 + 1;v90[v235]=v164[v166];break;end end break;end end break;end end end break;end if (((7 + 3138)<=(2009 + 1794 + 995)) and (v162==((3915 -1989) -(1092 + 834)))) then local v225=0 + 0;local v226;while true do if ((((5567 -3328) -(2326 -1211))>25) and (v225==(0 + 0))) then v226=0 + 0;while true do if (((391 + 241)>(489 + 89)) and (v226==(1 -0))) then v162=1094 -(113 + 980);break;end if (((296 + 1685)>(690 -(15 + 20))) and (v226==(215 -(40 + (2139 -(120 + 1844)))))) then v163=v92[2 -(203 -(60 + 143))];v164,v165=v87(v90[v163](v90[v163 + ((2 -1) -(344 -(105 + 239)))]));v226=(3506 -(940 + 834)) -(359 + 1372);end end break;end end end end break;end end end elseif ((v93<=(39 -11)) or (((4062 -(348 + 1227)) -1279)>=(2279 + 915))) then if ((((335 + 4462) -(48 + 270 + 217))>=(162 + 168 + (463 -(40 + 133)))) and (v93<=(1526 -(371 + 1129)))) then if ((v93==(116 -91)) or ((1049 + 2867)<(550 + 388))) then local v167=0 -(397 -(39 + 358));local v168;local v169;local v170;local v171;local v172;while true do if ((v167==(1 + 1)) or ((10670 -5676)<=(1059 + 720))) then v172=nil;while true do if ((v168==(0 -(1344 -(1249 + 95)))) or (((7698 -4750) + 195)>(15658 -11404))) then local v227=0 + 0;while true do if (((5763 -(613 + 963))>(3957 -(1450 + 270))) and (v227==(0 + 0))) then v169=0 -0;v170=nil;v227=4 -3;end if ((v227==(1 + 0)) or ((5991 -(221 + 1342))<(2979 -(75 + 162)))) then v168=(672 -(632 + 39)) + 0;break;end end end if ((v168==(2 + (0 -0))) or ((4947 -((1397 -901) + 1125))<(2608 -1544))) then while true do if ((v169==(1 -0)) or ((7668 -4845)<(1078 -(218 + 285)))) then v172=v92[1 + 2];for v265=2 -1,v172 do v171[v265]=v90[v170 + v265];end break;end if ((((2114 -(1100 + 754)) -(54 + 206))==v169) or ((4575 -((771 -(589 + 93)) + 486))==((3294 + 2648) -1698))) then local v245=0 -(0 -0);while true do if (((1642 -((2510 -(955 + 834)) + 18))<(255 + 1716)) and (v245==(1 + 0))) then v169=(1650 -(139 + 1510)) -0;break;end if ((v245==(0 -0)) or ((2280 -(5 + 18))==(3652 -(5876 -4176)))) then local v278=0 + 0 + 0;while true do if ((v278==0) or ((10340 -7218)<((2596 + 442) -(4 + 52)))) then v170=v92[(1 + 4) -3];v171=v90[v170];v278=1 + 0;end if (((1 + 0)==v278) or ((1663 -1056)>=(254 + 2354))) then v245=1 + 0;break;end end end end end end break;end if ((v168==(1 + 0)) or ((1058 + 3611)<3363)) then local v228=0 -0;while true do if ((v228==(4 -3)) or (3431>((3545 -1084) + 1054))) then v168=7 -5;break;end if ((((5738 -(34 + 1645)) -(172 + 83))>=(93 + 1615)) and (v228==(0 -0))) then v171=nil;v172=nil;v228=2 -(1506 -(860 + 645));end end end end break;end if (((4809 -2195)==(12194 -9580)) and (((1945 -(230 + 1172)) -(346 + 197))==v167)) then v168=1735 -(1410 + 257 + 68);v169=nil;v167=1 -(0 + 0);end if ((v167==((1408 -(1015 + 392)) + (0 -0))) or (((24926 -14367) -6920)<((1287 -(531 + 392)) -(74 + 40)))) then v170=nil;v171=nil;v167=1 + 1;end end else local v173=1079 -((2041 -(1456 + 2)) + 496);local v174;local v175;local v176;local v177;local v178;local v179;while true do if (((1254 + (85 -50))<((1913 -(1550 + 280)) + 2103)) and ((921 -(235 + 685))==v173)) then v176=nil;v177=nil;v173=(1817 -(66 + 1750)) + 1;end if (((641 + (4421 -(1166 + 186)))==3710) and (v173==(373 -((1139 -(538 + 321)) + 93)))) then v174=(0 + 0) -0;v175=nil;v173=1 + 0 + (0 -0);end if (((3058 -(247 + 1339))>(1688 -1024)) and (v173==(315 -((538 -273) + 48)))) then v178=nil;v179=nil;v173=1970 -(1544 + 423);end if (((2237 -(86 + 88 + (3820 -2918)))<=((6523 -(717 + 83)) -3020)) and (v173==(3 -0))) then while true do if ((4246>(2842 -(231 + 210))) and (v174==(154 -(96 + 58)))) then v175=(2416 -(989 + 275)) -(221 + 931);v176=nil;v174=102 -((1724 -(1194 + 457)) + 28);end if ((v174==(2 + 0)) or ((106 + 424)==(3629 -(143 + 228)))) then v179=nil;while true do if ((v175==(7 -5)) or ((8436 -5127)<=(2398 -1487))) then for v267=v176,v69 do local v268=1935 -(1781 + 154);while true do if (((2844 -(18 + 186))>=(554 + 662)) and (v268==(0 -0))) then v179=v179 + (1376 -(1179 + 196));v90[v267]=v177[v179];break;end end end break;end if (((832 -(98 + 734))==v175) or ((6898 -(194 + 462 + 1309))<(5769 -(275 + 1261)))) then local v246=463 -((292 -(41 + 10)) + 222);local v247;while true do if ((v246==0) or ((14943 -(10869 -(8 + 233)))<((9347 -5636) -(302 + 235)))) then v247=0 -0;while true do if ((v247==(0 -0)) or ((6264 -(806 + 634))<(3732 -1179))) then local v297=238 -((1845 -(230 + 1390)) + 7 + 6);while true do if (((0 -0)==v297) or (3008==(2205 -(3246 -(1349 + 175))))) then v176=v92[2 -0];v177,v178=v87(v90[v176](v12(v90,v176 + (1046 -(85 + (1807 -(59 + 788)))),v92[1 + 2])));v297=1 -0;end if (((8690 -6570)<=(1224 + 3025)) and (v297==((19 + 1243) -(627 + 634)))) then v247=(1 + 2) -2;break;end end end if (((1562 -1103)<=((3183 -(381 + 821)) + 2453)) and (v247==((1 + 0) -0))) then v175=1 + 0;break;end end break;end end end if ((((28417 -21054) -5200)<=(4295 -(984 + 392))) and (v175==(2 -1))) then local v248=(0 -0) -(0 -0);local v249;while true do if ((((8454 -(527 + 55)) -4756)>=1068) and (v248==(0 + 0))) then v249=(25 -(18 + 7)) -0;while true do if ((((6026 -(1024 + 3)) -(134 + (2509 -(1382 + 470))))>=(3497 -2387)) and (v249==0)) then v69=(v178 + v176) -(1 + 0);v179=0 + 0;v249=(722 -(66 + 655)) + 0;end if ((v249==(3 -2)) or ((705 + 1716)<=(4576 -2717))) then v175=2;break;end end break;end end end end break;end if ((v174==(1 + 0 + 0)) or ((666 -219)==(1429 -1015))) then local v229=0;while true do if (((9203 -5442)==((1669 + 2283) -(23 + 168))) and (v229==(1 -0))) then v174=2 + 0;break;end if ((v229==(283 -(202 + 81))) or ((4141 -(482 + 52))<(1323 -(345 + (1666 -(942 + 405)))))) then v177=nil;v178=nil;v229=1 -0;end end end end break;end end end elseif (((18010 -13158)==(11718 -6866)) and (v93>(114 -87))) then local v180=(47 -(24 + 23)) -0;local v181;local v182;while true do if (((1183 -(467 + 417))<(6326 -1536)) and ((0 + 0)==v180)) then v181=389 -(194 + 195);v182=nil;v180=1 + 0 + 0 + 0;end if ((((22568 -12994) -4609)>=((8909 -3528) -3482)) and (v180==(3 -2))) then while true do if (((1986 -(621 + 546))>(71 + 265)) and (v181==(0 -0))) then v182=v92[1240 -(349 + 889)];v90[v182]=v90[v182](v90[v182 + (2 -1)]);break;end end break;end end else local v183=0 + 0;local v184;local v185;while true do if ((v183==(148 -(94 + 53))) or (((6296 -(1071 + 527)) -((2479 -(24 + 1158)) + 351))>=((14458 -6995) -2789))) then while true do if ((v184==(0 + 0 + 0)) or (848>(11633 -(20697 -13018)))) then v185=v92[2 + 0];v90[v185]=v90[v185](v12(v90,v185 + (2 -1),v69));break;end end break;end if (((890 -300)<(2891 + 484)) and (v183==((0 -0) + 0))) then v184=0 -0;v185=nil;v183=2 -1;end end end elseif ((v93<=(418 -(28 + (519 -159)))) or ((10247 -(2110 + 3248))<((6079 + 3552) -5557))) then if ((v93==(52 -23)) or ((4613 -(29 + 145))==(520 + 2285 + 607))) then v90[v92[1 + 1]]=v90[v92[3 -(348 -(162 + 186))]][v90[v92[(33 -21) -(5 + 3)]]];else local v187=0 + 0;local v188;local v189;while true do if (((3068 -(171 + 1288))>(513 + 114)) and ((1 + 0 + 0)==v187)) then while true do if ((v188==(0 -0)) or ((4935 -1939)<(1618 -((1404 -(529 + 364)) + 187)))) then v189=v92[2 -(0 -0)];v90[v189]=v90[v189](v12(v90,v189 + 1 + (1874 -(1701 + 173)),v92[9 -6]));break;end end break;end if ((v187==(0 + 0)) or ((3938 -1490)==(5348 -2070))) then local v215=0 + 0;while true do if ((v215==(0 -(0 -0))) or ((3553 -(2977 -(505 + 923)))<=(2501 -(1157 + 15)))) then v188=1798 -(1170 + 628);v189=nil;v215=351 -(303 + 47);end if ((v215==(862 -(19 + 842))) or (((2153 + 1045) -1279)<(1569 -1008))) then v187=401 -(320 + (1424 -(117 + 1227)));break;end end end end end elseif ((v93<=(101 -(279 -209))) or ((300 + 4462)==(378 + 533))) then if (((9710 -(1527 + 4502))<=(721 + 3080)) and (v90[v92[1 + 1]]==v92[(1899 -(127 + 1758)) -(37 -27)])) then v68=v68 + (1 -0);else v68=v92[3];end elseif ((v93>((2038 -1273) -(284 + 449))) or ((2806 -(463 + 1534))>(2405 -1096))) then local v206=0 + 0;local v207;local v208;local v209;while true do if ((v206==((56 -(48 + 8)) -(0 -0))) or (2514>(4328 -(100 + 248)))) then v207=1211 -(936 + 264 + 11);v208=nil;v206=1468 -(1305 + (424 -(98 + 164)));end if (((3162 + 1110)==((6850 -(731 + 437)) -((841 -(306 + 237)) + 1112))) and (v206==(1 + (0 -0)))) then v209=nil;while true do if ((v207==((0 + 0) -(496 -(41 + 455)))) or ((4187 -2651)>(11670 -7078))) then local v240=0 -(1941 -(202 + 1739));while true do if ((v240==(1 + 0)) or ((1811 -964)>=(1371 + 323))) then v207=(2523 -794) -(1302 + 142 + 284);break;end if (((71 + 36)<=(2043 -(187 + 490))) and ((0 -0)==v240)) then v208=v92[598 -(331 + 265)];v209={};v240=1 -(298 -(247 + 51));end end end if (((10091 -6437)<(435 + 3298)) and (v207==(1 + 0))) then for v250=1 + 0, #v89 do local v251=0 + 0;local v252;while true do if (((184 + 613)>=(199 + 121)) and (v251==(0 + 0))) then v252=v89[v250];for v285=(1187 -370) -(171 + 646), #v252 do local v286=0 -0;local v287;local v288;local v289;local v290;while true do if ((v286==(555 -(154 + 399))) or (((5341 -3782) + 800)<(48 + 26))) then while true do if ((v287==(0 -0)) or ((3350 + 1426)==(4458 -(539 + (758 -579))))) then local v307=0 -0;while true do if ((v307==(0 -(0 -0))) or ((372 + 682)<(411 -(190 + (216 -110))))) then v288=v252[v285];v289=v288[390 -(372 + 17)];v307=1;end if ((v307==(1 -0)) or ((697 + 3607)<((7714 -5779) + 1573))) then v287=603 -(346 + (750 -494));break;end end end if ((v287==(1902 -(1830 + 71))) or ((4519 -1743)<=(6577 -4314))) then v290=v288[1150 -(866 + (687 -405))];if ((((11039 -(82 + 285)) -7105)==(4854 -((432 -(18 + 44)) + 917))) and (v289==v90) and (v290>=v208)) then local v309=120 -(104 + 16);while true do if ((v309==(0 -0)) or ((4450 -((398 -181) + 190))>=(2878 + 1863))) then v209[v290]=v289[v290];v288[1 + 0]=v209;break;end end end break;end end break;end if (((3830 + (3008 -(1140 + 701)))>=(15646 -11474)) and (v286==(326 -(5 + 320)))) then v289=nil;v290=nil;v286=1449 -(438 + (1320 -311));end if ((v286==(0 -(0 -0))) or ((2201 -(2759 -1405))==(6 + 60 + 848))) then v287=188 -(5 + (361 -178));v288=nil;v286=1075 -(341 + 733);end end end break;end end end break;end end break;end end else v90[v92[3 -1]]=v90[v92[1979 -(1160 + 816)]][v92[1976 -(934 + 1038)]];end v68=v68 + (1521 -(1198 + 322));break;end if ((v99==((0 -0) + 0)) or ((3971 + 128)<(1624 -775))) then local v109=0 -0;local v110;while true do if ((v109==(1439 -(903 + 536))) or (((2261 -378) + 1879)<=((3444 -1855) + 575))) then v110=0 + 0;while true do if (((798 -(186 + 140))==(38 + 434)) and (v110==(1 + 0))) then v99=(10 -7) -2;break;end if ((v110==(868 -(793 + 75))) or ((967 + 741)<(1631 -(478 + 332)))) then local v117=0 + 0;while true do if (((2132 -(1051 + 326))<=1436) and (v117==(1 + 0))) then v110=1 + 0 + 0;break;end if (((7247 -4375)>=(1427 + (1318 -(20 + 763)))) and (v117==(0 + 0))) then v92=v83[v68];v93=v92[(3419 -1772) -(1280 + 366)];v117=(2 -1) + 0;end end end end break;end end end end break;end end break;end end end end v67=3;end end end;end return v29(v28(),{},v16)();end if (v17==1) then function v20(v34,v35,v36)if v36 then local v73=(v34/(((2056 -(156 + 1153)) -(521 + 224))^(v35-(1 -0))))%((2 + 0)^(((v36-1) -(v35-(1 -0))) + 1));return v73-(v73%(1 + 0));else local v74=0;local v75;while true do if (v74==((1147 -(53 + 1094)) -(1462 -(394 + 1068)))) then v75=((628 -(128 + 499)) + 1)^(v35-(1 -0));return (((v34%(v75 + v75))>=v75) and (2 -(1 + 0))) or (0 + 0);end end end end v21=nil;function v21()local v49=(3246 -(1468 + 73)) -(454 + 1251);local v50;while true do if (v49==(1 + 0)) then return v50;end if (v49==0) then v50=v1(v15,v18,v18);v18=v18 + (2 -1);v49=1 + 0;end end end v22=nil;v17=2;end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v51=0 -0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if ((1 + 1)==v51) then v56=nil;v57=nil;v51=12 -9;end if (v51==(429 -(129 + 296))) then while true do if (v52~=(1 -0)) then else v55=nil;v56=nil;v52=2 -0;end if (v52~=(2 + 0)) then else local v79=0 + 0;local v80;while true do if (v79==(0 + 0)) then v80=0 -0;while true do if (v80==(0 -0)) then local v102=0;while true do if ((1452 -(930 + 521))==v102) then v80=1;break;end if (v102==(1073 -(403 + 670))) then v57=nil;v58=nil;v102=1 + 0;end end end if (v80==(1640 -(42 + 1597))) then v52=2 + 1;break;end end break;end end end if ((0 -0)~=v52) then else local v81=1231 -(880 + 351);while true do if (v81==(1 + 0)) then v52=1 -0;break;end if (v81~=(361 -(173 + 188))) then else v53=0 + 0;v54=nil;v81=2 -1;end end end if (v52~=(11 -8)) then else v59=nil;while true do local v94=69 -(60 + 9);local v95;while true do if (v94~=(1142 -(133 + 1009))) then else v95=1727 -(302 + 1425);while true do if (v95~=(1994 -(1274 + 719))) then else if (v53==2) then local v104=0 + 0;local v105;local v106;while true do if ((0 -0)==v104) then v105=1918 -(272 + 1646);v106=nil;v104=2 -1;end if (v104==1) then while true do if (v105==(0 -0)) then v106=1257 -(997 + 260);while true do if (0==v106) then local v118=0 -0;while true do if (v118==(1344 -(1259 + 84))) then v106=1 + 0;break;end if (v118==0) then for v194=1 -0,v58 do local v195=0 + 0;local v196;local v197;local v198;local v199;while true do if (v195==(1926 -(852 + 1073))) then v198=nil;v199=nil;v195=2;end if (v195==(5 -3)) then while true do if (v196~=(1 -0)) then else v199=nil;while true do if (v197~=(975 -(88 + 887))) then else local v269=0;local v270;while true do if (v269==(358 -(42 + 316))) then v270=886 -(422 + 464);while true do if (v270~=(1 -0)) then else v197=93 -(67 + 25);break;end if (v270==(1987 -(1030 + 957))) then local v303=187 -(58 + 129);while true do if (v303~=(0 + 0)) then else v198=v21();v199=nil;v303=1 + 0;end if (v303~=(743 -(318 + 424))) then else v270=2 -1;break;end end end end break;end end end if (v197~=1) then else if (v198==(1 -0)) then v199=v21()~=(300 -(243 + 57));elseif (v198==2) then v199=v24();elseif (v198==(7 -4)) then v199=v25();end v59[v194]=v199;break;end end break;end if (0~=v196) then else local v239=875 -(812 + 63);while true do if (v239~=(1518 -(1035 + 483))) then else v197=0 + 0;v198=nil;v239=1 + 0;end if (v239~=1) then else v196=1 -0;break;end end end end break;end if (v195==(1171 -(1045 + 126))) then v196=0 -0;v197=nil;v195=1 + 0;end end end v57[6 -3]=v21();v118=1 + 0;end end end if (v106~=1) then else for v120=1,v23() do local v121=0 -0;local v122;local v123;local v124;while true do if (v121~=(544 -(317 + 227))) then else v122=1055 -(701 + 354);v123=nil;v121=845 -(61 + 783);end if (v121~=1) then else v124=nil;while true do if (v122==(0 -0)) then local v216=0;while true do if (0~=v216) then else v123=320 -(248 + 72);v124=nil;v216=1;end if (v216==(1 -0)) then v122=1;break;end end end if ((2 -1)~=v122) then else while true do if (v123~=0) then else v124=v21();if (v20(v124,4 -3,2 -1)~=(1206 -(854 + 352))) then else local v253=1481 -(729 + 752);local v254;local v255;local v256;local v257;local v258;local v259;while true do if (v253~=(2 + 1)) then else while true do if ((1 -0)==v254) then local v298=0 -0;while true do if ((1 + 0)==v298) then v254=2;break;end if ((0 + 0)==v298) then v257=nil;v258=nil;v298=151 -(48 + 102);end end end if (v254==0) then local v299=0;while true do if (v299~=(995 -(951 + 44))) then else v255=0 + 0;v256=nil;v299=618 -(514 + 103);end if (v299~=(71 -(44 + 26))) then else v254=1 + 0;break;end end end if (v254==(2 + 0)) then v259=nil;while true do if (1~=v255) then else v258=nil;v259=nil;v255=2;end if (v255==(3 -1)) then while true do if (v256~=(1399 -(271 + 1127))) then else local v310=0 + 0;local v311;while true do if (v310==(509 -(479 + 30))) then v311=0 -0;while true do if (v311~=(2 -1)) then else v256=720 -(188 + 530);break;end if (v311~=(0 + 0)) then else v259={v22(),v22(),nil,nil};if (v257==(0 + 0)) then local v323=0 + 0;local v324;local v325;while true do if (v323~=(657 -(507 + 149))) then else while true do if (v324==(0 -0)) then v325=0 + 0;while true do if (0~=v325) then else v259[697 -(580 + 114)]=v22();v259[4 + 0]=v22();break;end end break;end end break;end if (v323~=(0 + 0)) then else v324=0 -0;v325=nil;v323=1;end end elseif (v257==(1908 -(1347 + 560))) then v259[1894 -(1597 + 294)]=v23();elseif (v257==2) then v259[348 -(166 + 179)]=v23() -((1854 -(159 + 1693))^(11 + 5));elseif (v257==(5 -2)) then local v330=0 -0;while true do if (v330==(723 -(34 + 689))) then v259[156 -(11 + 142)]=v23() -(2^16);v259[610 -(142 + 464)]=v22();break;end end end v311=2 -1;end end break;end end end if (v256==(0 + 0)) then local v312=615 -(76 + 539);local v313;local v314;while true do if (v312==(1437 -(937 + 500))) then v313=0;v314=nil;v312=4 -3;end if ((1 + 0)==v312) then while true do if ((780 -(742 + 38))==v313) then v314=0;while true do if (v314==(0 -0)) then local v326=732 -(92 + 640);while true do if (v326~=(56 -(43 + 12))) then else v314=3 -2;break;end if (v326==(1399 -(169 + 1230))) then v257=v20(v124,2,1351 -(758 + 590));v258=v20(v124,1 + 3,260 -(190 + 64));v326=1;end end end if ((1976 -(701 + 1274))==v314) then v256=1064 -(148 + 915);break;end end break;end end break;end end end if (v256==(6 -3)) then if (v20(v258,3,1 + 2)~=(1 + 0)) then else v259[2 + 2]=v59[v259[4]];end v54[v120]=v259;break;end if (v256==(356 -(82 + 272))) then local v316=1291 -(862 + 429);local v317;while true do if (v316~=(830 -(202 + 628))) then else v317=0;while true do if (v317~=(0 -0)) then else local v321=0 + 0;local v322;while true do if (0~=v321) then else v322=0 + 0;while true do if (1==v322) then v317=1 + 0;break;end if (v322==(470 -(174 + 296))) then local v329=0 -0;while true do if ((2 -1)~=v329) then else v322=1 + 0;break;end if (v329~=(646 -(393 + 253))) then else if (v20(v258,1548 -(1090 + 457),3 -2)~=1) then else v259[2]=v59[v259[6 -4]];end if (v20(v258,2,1 + 1)==(3 -2)) then v259[1583 -(1299 + 281)]=v59[v259[1352 -(68 + 1281)]];end v329=1 -0;end end end end break;end end end if (v317==(1 + 0)) then v256=1 + 2;break;end end break;end end end end break;end if (v255~=(0 + 0)) then else local v306=0 -0;while true do if (v306~=(2 -1)) then else v255=1;break;end if (v306~=(528 -(412 + 116))) then else v256=0 + 0;v257=nil;v306=1;end end end end break;end end break;end if (v253~=(759 -(618 + 139))) then else v258=nil;v259=nil;v253=3;end if ((1346 -(36 + 1310))~=v253) then else v254=1042 -(922 + 120);v255=nil;v253=162 -(89 + 72);end if (1~=v253) then else v256=nil;v257=nil;v253=2;end end end break;end end break;end end break;end end end v53=1898 -(1567 + 328);break;end end break;end end break;end end end if (v53~=(801 -(347 + 454))) then else local v107=0 -0;local v108;while true do if (v107~=(0 + 0)) then else v108=0 -0;while true do if (v108~=(0 -0)) then else local v115=0;while true do if (v115~=1) then else v108=1;break;end if (v115==(546 -(255 + 291))) then v54={};v55={};v115=1308 -(1056 + 251);end end end if ((1 + 0)~=v108) then else v56={};v53=1096 -(696 + 399);break;end end break;end end end break;end if ((1656 -(500 + 1156))==v95) then local v103=0 + 0;while true do if ((2 -1)~=v103) then else v95=1;break;end if (v103~=(0 + 0)) then else if ((1518 -(803 + 712))~=v53) then else local v111=0;local v112;while true do if (v111==(0 -0)) then v112=0 + 0;while true do local v116=0 -0;while true do if (v116~=(0 + 0)) then else if (v112==(1 + 0)) then return v57;end if (v112~=0) then else local v191=0 + 0;while true do if (v191~=(1014 -(793 + 221))) then else for v217=965 -(913 + 51),v23() do v55[v217-(782 -(580 + 201))]=v28();end for v219=2 -1,v23() do v56[v219]=v23();end v191=1;end if (v191~=(2 -1)) then else v112=1 + 0;break;end end end break;end end end break;end end end if (v53~=(4 -3)) then else local v113=1308 -(130 + 1178);local v114;while true do if (v113==0) then v114=240 -(63 + 177);while true do if (v114==1) then v59={};v53=1 + 1;break;end if (v114~=(1112 -(80 + 1032))) then else local v119=1867 -(296 + 1571);while true do if (v119==1) then v114=3 -2;break;end if (v119~=(0 + 0)) then else v57={v54,v55,nil,v56};v58=v23();v119=1338 -(1058 + 279);end end end end break;end end end v103=665 -(356 + 308);end end end end break;end end end break;end end break;end if (v51~=(2 + 1)) then else v58=nil;v59=nil;v51=3 + 1;end if (v51==(1 + 0)) then v54=nil;v55=nil;v51=2;end if (v51~=(187 -(7 + 180))) then else v52=0 + 0;v53=nil;v51=1;end end end v17=5;end if (v17==3) then function v24()local v60=v23();local v61=v23();return (( -2 * v20(v61,2 + 30)) + 1) * (2^(v20(v61,170 -(145 + 4),20 + 11) -(1109 -(25 + 61)))) * ((((v20(v61,1 + 0,14 + 6) * ((1142 -(318 + 306 + 516))^(1482 -(770 + 680)))) + v60)/((1108 -(591 + 515))^(1915 -(480 + (3145 -(1233 + 529)))))) + (3 -2));end v25=nil;function v25(v37)local v62;if  not v37 then local v76=794 -(427 + 367);while true do if (v76==(0 + 0)) then v37=v23();if (v37==(1266 -(1006 + 260))) then return "";end break;end end end v62=v3(v15,v18,(v18 + v37) -(1 + 0));v18=v18 + v37;local v63={};for v64=394 -(318 + (721 -(106 + 540))), #v62 do v63[v64]=v2(v1(v3(v62,v64,v64)));end return v6(v63);end v26=v23;v17=4;end end end vv8());end
